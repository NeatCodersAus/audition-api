plugins {
    id "java"
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "1.1.0"
    id "maven-publish"
    id "jacoco"
    id "com.github.spotbugs" version "5.0.14"
    id "io.freefair.lombok" version "8.0.1"
    id "checkstyle"
    id "pmd"
}
apply from: 'config/code-analysis.gradle'

group = 'com.audition'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring Boot Starters
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    // Spring Cloud
    //There is no requirement of resilience/circuit breaker pattern and config is not being saved outside, so removing these

    // Micrometer
    implementation "io.micrometer:micrometer-tracing-bridge-brave"
    implementation "io.micrometer:micrometer-tracing"
    implementation "io.micrometer:micrometer-registry-prometheus"
    implementation "io.micrometer:context-propagation"

    // Spring Doc
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

    // Hibernate Validator. Removed spring-starter-data-jpa as there are no repositories in this app. Just need this for validation of input.
    implementation "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"

    // Logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "ch.qos.logback:logback-core:${logbackVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"

    //Devtools
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    // Runtime
    runtimeOnly "io.micrometer:micrometer-registry-prometheus"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"

    }
}

tasks.register('prepareGitHooks', Copy) {
    from "$projectDir/git-hooks"
    into "$projectDir/.git/hooks"
    include "*"
}
tasks.matching { it.name != 'prepareGitHooks' }.configureEach { Task task -> task.dependsOn prepareGitHooks }


tasks.named('test') {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes('Automatic-Module-Name': "com.audition")
    }
}